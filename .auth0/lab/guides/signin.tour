{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "0: Prerequisites",
  "steps": [
    {
      "file": "",
      "description": "## Check that you have the required accounts\nBefore getting started, let's verify you have everything you need:\n\n1. [Auth0 FGA account](https://fga.dev/) to add authorization to resources exposed by the sample application.\n1. An [Google AI Studio account](https://ai.google.dev/aistudio) to create a Gemini API key.\n\nFree versions of these accounts are adequate for this lab. We use Google Gemini since they allow free-tier customers to create vector embeddings. However, in practice, you can use any model provider.\n\n",
      "line": 1,
      "title": "Check that you have the required accounts"
    },
    {
      "title": "What's in this lab?",
      "description": "## What's in this lab?\n\nIn this lab, you are provided with two text assets that can be found in `./assets`. These include:\n- **`assets/public-doc.md`**: a document that should be publicly readable by all users\n- **`assets/private-doc.md`**: a document that should be private--only users with explicit authorization should be able to view that document\n\nIn the context of our AI agent, that means that the agent will only be able to retrieve information from the private document if the user has authorization to view it.\n\nYou are also provided with a Node.js application with which you will build an Retrieval-Augmented Generation (RAG) pipeline using [LangChain](https://www.langchain.com/) and the [Auth0 AI for LangChain SDK](https://auth0.com/ai/docs/langchain-sdk#auth0-ai-for-langchain). This application is composed of:\n- **`index.ts`**: This is where you will define your RAG pipeline, using `FGARetriever` from the Auth0 AI LangChain SDK to filter authorized data from our in-memory vector database (`MemoryVectorStore`).\n- **`helpers/langchain.ts`**: This includes helper functions that will create a LangGraph agent and retrieve documents from the `./assets` folder."
    }
  ],
  "nextTour": "1: Create an Auth0 FGA store and client"
}