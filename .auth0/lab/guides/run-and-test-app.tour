{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "4: Run and test the application",
  "steps": [
    {
      "title": "Checkpoint",
      "description": "## Checkpoint\n\n### You just:\n1. Created a RAG pipeline using LangChain and the Node.js Auth0 AI Langchain SDK.\n\n### Next you will:\n1. Run the application to test FGA on our RAG pipeline."
    },
    {
      "file": "",
      "line": 1,
      "title": "Run the application",
      "description": "## Deploy the application\n1. Before deplying the application, navigate to the **PORTS** tab near the bottom of this screen.\n1. Right click on the entry with the port **3000**.\n1. Select **Port Visibility** > **Public**.\n1. Select [this link](command:workbench.action.debug.start)to deploy the application.\n\n",
      "selection": {
        "start": {
          "line": 5,
          "character": 4
        },
        "end": {
          "line": 6,
          "character": 1
        }
      }
    },
    {
      "title": "Give the user access to the private doc",
      "description": "## Give the user access to the private doc\n\nFor the agent to access informationin the private doc on the user's behalf, we'll need to add a new tuple in Auth0 FGA.\n\n1. From the Auth0 FGA dashboard, select **Tuple Management**.\n2. Select the **+ Add Tuple** button.\n3. Fill in the following values:\n    - User:  **user:Sara***\n    - Object: select **doc** and add **private-doc** in the ID field\n    - Relation: **viewer**\n4. Select the **Add Tuple** button."
    },
    {
      "title": "Re-run the application",
      "description": "## Re-run the application\n\n1. Select [this link](command:workbench.action.debug.stop) to stop the application.\n1. Select [this link](command:workbench.action.debug.start) to re-run the application.\n> This time, the agent should respond with the forecast information since the user has permission to view the private-doc.\n"
    }
  ]
}